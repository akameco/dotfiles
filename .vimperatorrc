" akameco vimperatorrc
colorscheme desert

" プラグイン読み込み {{{
let g:plugin_loader_roots = "~/src/github.com/vimpr/vimperator-plugins"
let g:plugin_loader_plugins = "_libly,sbmcommentsviewer,caret-hint,stella,feedSomeKeys_3,commandBookmarklet,copy,PDF.js,_smooziee,echopy,tombloo,treestyletab,google-exopen,toggler"
" hints-ext
" }}}

" color {{{
hi Hint font-family: Arial; font-size: 21px; font-weight: bold; text-shadow: -1px -1px 2px black, 1px -1px 2px black, -1px 1px 2px black, 1px 1px 2px black; color: #33cccc;
hi HintElem color: gray; background-color: #a1e4e6;
hi HintActive color: black; background-color: #ff8700;
hi ErrorMsg color:white; background-color: #ec6aa1;
"}}}

" settings {{{ 
set! browser.sessionstore.max_tabs_undo=30
set! ui.key.generalAccessKey=0
set ignorecase
set hlsearch
set focuscontent
set autocomplete
set complete=Ssl
set defsearch=g
set suggestengines=g
set hintchars=fjklasdhguionmerwc
set nextpattern=\bnext\b,\bmore\b,^next$,^次(の)?ページ,^new$,\b次.*,^次へ$,→\b,^>$,^(>>|≫)$,^(>|≫),(>|≫)$
set previouspattern=\bprev|previous\b,^prev$,^前(の)?ページ,^old$,\b前.*,^前へ$,\b←,^<$,^(<<|≪)$,^(<|≪),(<|≪)$
set visualbell
highlight Bell display:none
" set gui=nonavigation
"}}}

" mappings {{{
" OSのキーバインドを再現 
noremap <C-a> <Insert><C-a><Insert>
noremap <C-c> <Insert><C-c><Insert>
noremap <C-v> <Insert><C-v><Insert>
noremap <C-z> <Insert><C-z><Insert>

inoremap <C-a> <Insert><C-a><Insert>
inoremap <C-c> <Insert><C-c><Insert>
inoremap <C-v> <Insert><C-v><Insert>
inoremap <C-x> <Insert><C-x><Insert>
inoremap <C-z> <Insert><C-z><Insert>

cnoremap <C-a> <Insert><C-a><Insert>
cnoremap <C-c> <Insert><C-c><Insert>
cnoremap <C-x> <Insert><C-x><Insert>
cnoremap <C-z> <Insert><C-z><Insert>

noremap j 3j
noremap k 3k
nnoremap J <Left>
nnoremap K <Right>
nnoremap h gT
nnoremap l gt

map s :set gui=nonavigation<cr>
map S :set gui=navigation<cr>

" vmap p Y<Esc><Esc>P
" nmap p Y<Esc>P

" panorama
" noremap m :panorama<Space>switch<Space> 
" }}}

" config {{{
" ダウンロードウィンドウを完了後自動で閉じる
set! browser.download.manager.closeWhenDone=true
" ダウンロード履歴をFirefox終了時に削除
set! browser.download.manager.retention=1
" ダウンロードウィンドウを完了後自動で閉じる
set! browser.download.manager.closeWhenDone=true
" JavaScriptでのウィンドウ移動・リサイズ拒否
set! dom.disable_window_move_resize=true
" JavaScriptのステータスバー操作を無効化
set! dom.event.contextmenu.enabled=false
" アドオンインストール時の待ち時間カット
set! security.dialog_enable_delay=0
"最小化した時にメモリを開放
set! config.trim_on_minimize=true
"set! browser.tabs.loadDivertedInBackground=true
" }}}

" コマンドラインではimeをOff {{{
style -name commandline-ime chrome://* #liberator-commandline-command input {ime-mode: inactive;}

let g:ime_activate_xkey='\[Zenkaku_Hankaku]\[Shift]'
let g:ime_deactivate_xkey='\[Control]\[Shift] '
let g:imekeys_methods='x,w'
let g:imeoff='cmd'
" }}}

" fcitx {{{
" noremap <silent> f :!fcitx-remote -c<cr>qf
" noremap <silent> F :!fcitx-remote -c<cr>qF
" }}}

" maine_coon {{{
let g:maine_coon_default = "am"
let g:maine_coon_style = "height: 1em; margin: 0; padding: 3px; border: 1px solid #b3b3b3; border-left: 0; border-bottom: 0; text-align: left; color: #000; font: 21px/1 sans-serif; background: #ebebeb;"
" }}}

"feedsomekey_3 {{{
:command! -nargs=+ lazy autocmd VimperatorEnter .* <args><CR>
lazy fmaps -u='https://feedly\.com/' j k n p s
lazy fmaps -u='http://feedly\.com/' j k n p s
"}}}

" tombloo {{{
let g:hint_tombloo_key = 'r'
" }}}

" stella.js {{{
js <<EOM
liberator.globalVariables.stella_nico_use_comment=true
function addLocalMappings(buffer, maps) {
  maps.forEach(
      function (map) {
      let [cmd, action, extra] = map;
      let actionFunc = action;
      extra || (extra = {});

      if (typeof action == "string") {
      if (action.charAt(0) == ':')
      actionFunc = extra.open ? function () commandline.open("", action, modes.EX)
      : function () liberator.execute(action);
      else
      actionFunc = function () events.feedkeys(action, extra.noremap, true);
      }
      extra.matchingUrls = buffer;
      mappings.addUserMap(
        [modes.NORMAL],
        [cmd],
        "Local mapping for " + buffer,
        actionFunc,
        extra
        );
      }
  );
}
addLocalMappings(
    /^(http:\/\/(es|www).nicovideo.jp\/(watch|playlist\/mylist)|http:\/\/(jp|www)\.youtube\.com\/watch|http:\/\/(www\.)?vimeo\.com\/(channels\/(hd)?#)?\d+)/,
    [
    ['<C-g>', ':pageinfo S',      ],
    ['p',     ':stplay',          ],
    ['m',     ':stmute',          ],
    ['c',     ':stcomment',       ],
    ['zz',    ':stlarge',         ],
    ['s',     ':stseek! 15',      ],
    ['S',     ':stseek! -15',     ],
    ['v',     ':stvolume! 10',    ],
    ['V',     ':stvolume! -10',   ],
    ['q',     ':strelations ',    {open: true}],
    ['Q',     ':strelations! ',   {open: true}],
    ]
    );
EOM
" }}}

" treestyletab {{{
" javascript liberator.beep = function() true
" tabbrowser[treestyletab-style][treestyletab-mode]
" .tabs-stack,
"   tabbrowser[treestyletab-style][treestyletab-mode]
"   .tabbrowser-tabs,
"   tabbrowser[treestyletab-style][treestyletab-tabbar-position]
"   .tabbrowser-tabs {
" background: transparent !important;
"   }
" " }}}

" copy.js {{{
javascript <<EOM
  liberator.globalVariables.copy_templates = [
    { label: 'title', value: '%TITLE%' },
    { label: 'plain', value: '%TITLE% %URL%' },
    { label: 'anchor', value: '<a href="%URL%">%TITLE%</a>' },
    { label: 'md', value: '[%TITLE%](%URL%)' },
  ];
EOM
" }}}

" ツリー型タブ {{{
style! -name=treestyletab chrome://* .tabbrowser-tab { z-index: 0 !important; }

js <<EOM
liberator.globalVariables.toggler = {
  tab: ["set gui=tabs", "set gui=notabs"],
};
EOM

map e :toggle tab<CR>:js TreeStyleTabBrowserAutoHide.toggleMode();<CR>
" }}}

" hatebu {{{
javascript if (typeof hBookmark != 'undefined') liberator.loadScript('chrome://hatenabookmark/content/vimperator/plugin/hatenabookmark.js', {__proto__: this});
" }}}

" vim: set filetype=vim :
