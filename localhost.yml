- hosts: localhost
  connection: local
  gather_facts: no
  sudo: no
  vars:
    homebrew_taps:
      - homebrew/binary
      - homebrew/dupes
      - caskroom/cask
      - sanemat/font
      - caskroom/versions
    homebrew_packages:
      - readline
      - openssl
      - python
      - ansible
      - coreutils
      - heroku-toolbelt
      - git
      - { name: zsh, install_options: disable-etcdir }
      - wget
      - curl
      - ctags
      - tree
      - go
      - lua
      - cscope
      - { name: macvim, state: head, install_options: with-lua, with-cscope ,override-systems }
      - direnv
      - peco
      - hub
      - tig
      - rbenv
      - ruby-build
      - imagemagick
      - tmux
      - phantomjs
      - gibo
      - node
      - thefuck
      - graphviz
      - postgresql
      - redis
      - terminal-notifier
    homebrew_cask_packages:
      - iterm2
      - firefox-ja
      - google-chrome
      - google-japanese-ime
      - flash
      - adobe-reader
      - java
      - skype
      - slack
      - dash
      - kobito
      - webstorm
      - rubymine
      - intellij-idea
      - vagrant
      - virtualbox
      - dropbox
      - karabiner
      - alfred
      - vlc
      - android-file-transfer
      - android-studio
      - gyazo
      - skitch
      - arduino
      - qlmarkdown
      - hyperswitch
      - bettertouchtool
      - evernote
      - eclipse-jee
      - cyberduck
      - hosts
      - processing
    rbenv_ruby_version: 2.2.2
    rbenv_global_gems:
      - bundler
      - pry

  tasks:
    - name: homebrew の tap リポジトリを追加
      homebrew_tap: tap={{ item }} state=present
      with_items: homebrew_taps

    - name: homebrew をアップデート
      homebrew: update_homebrew=yes

    # brew
    - name: brew パッケージをインストール
      homebrew: >
        name={{ item.name | default(item) }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: homebrew_packages
      register: brew_result

    # openssl
    - name: opensslをインストール
      homebrew: >
        name=openssl
        state=linked
        install_options=force
      changed_when: false

    # cask
    - name: homebrew-cask のインストール
      homebrew: name=brew-cask state=latest
      tags: cask
    - name: cask パッケージをインストール
      homebrew_cask: >
        name={{ item.name | default(item) }}
        state={{ item.state|default('installed') }}
      with_items: homebrew_cask_packages
      register: cask_result
      tags: cask
    - name: cask パッケージの情報保存先ディレクトリを作成
      file: path=cask_info state=directory
      tags: cask

    # oh-my-zsh
    # - name: oh-my-zsh のインストール
    #  shell: curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
    #  args:
    #    creates: ~/.oh-my-zsh/
    #  tags: shell
    - name: check zsh
      command: echo $SHELL
      register: shell
      changed_when: false
      tags: shell
    - name: shellをzshへ変更
      command: shell -s /bin/zsh
      when: shell.stdout.find('/bin/zsh') == -1
      tags: shell

    # Ricty
    - name: xquartz のインストール (for Ricty)
      homebrew_cask: name=xquartz
    - name: fontforge のインストール (for Ricty)
      homebrew: name=fontforge
    - name: Ricty のインストール
      homebrew: name=ricty install_options=vim-powerline
    - name: 生成されたフォントファイルをコピー
      shell: cp -f $(brew --cellar ricty)/*/share/fonts/Ricty*.ttf ~/Library/Fonts/
      args:
        creates: ~/Library/Fonts/Ricty-Bold.ttf
      notify: run fc-cache

    # dotfiles

    # ruby install
    - name: rubyのインストール
      shell: >
        eval "$(rbenv init -)";
        rbenv install {{ rbenv_ruby_version }}
        creates=~/.rbenv/versions/{{ rbenv_ruby_version }}
    - shell: >
        eval "$(rbenv init -)";
        rbenv global
      register: rbenv_global_version
      changed_when: false
    - name: globalに指定
      shell: >
        eval "$(rbenv init -)";
        rbenv global {{ rbenv_ruby_version }}
      when: rbenv_global_version.stdout != rbenv_ruby_version
    - name: gemのインストール
      gem: name={{ item }} state=latest user_install=no executable=~/.rbenv/shims/gem
      notify: rbenv rehash
      with_items: rbenv_global_gems

  handlers:
    - name: run fc-cache
      shell: fc-cache -vf
    - name: rbenv rehash
      shell: >
        eval "$(rbenv init -)";
        rbenv rehash
